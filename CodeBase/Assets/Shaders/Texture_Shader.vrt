#version 440 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec3 aUV;

uniform vec2 chunkPos;
uniform vec2 chunkSize;

out vec3 Normal;
out vec3 UVs;
out vec3 fragPos;

void main()
{
	Normal = aNormal;
	UVs = aUV;
	fragPos=aPos;
	
	vec2 prePos = vec2(aPos.x-(chunkSize.x*chunkPos.x),aPos.z-(chunkSize.y*chunkPos.y));
	
	float realX = (prePos.x/(chunkSize.x/2.0))-1.0;
	float realZ = (prePos.y/(chunkSize.y/2.0))-1.0;
	
	vec3 realPos = vec3(realX,realZ,0.0);
	
	gl_Position = vec4(realPos, 1.0);
}